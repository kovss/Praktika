#include <iostream>
#include<math.h>
using namespace std;
template <class T> T Vivod(T* ptrA, const int n);
template <class T> T zad_POISK(T* ptrA, const int n);
template <class T> T zad_SUM(T* ptrA, const int n);
template <class T> T zad_SORT(T* ptrA, const int n);


int main() {
	int n;
	setlocale(LC_ALL, "Rus");
	///////////////////////////////////////////////////////////////////////////////////
	cout << " Введите количество элементов(double): "; cin >> n;
	double* a = new double[n];
	cout << " Введите элементы массива: ";
	for (int i = 0; i < n; i++) cin >> a[i];
	Vivod(a, n);
	////////////////////////////////////////////////////////////////////////////////////
	//Блок 1-го задания: Найти количество элементов массива, меньших С
	zad_POISK(a, n);
	//Блок 2-го задания: Найти сумму целых частей элементов массива, расположенных после последнего отрицательного элемента.
	zad_SUM(a, n);
	//Блок 3-го задания: Преобразовать массив таким образом, чтобы сначала располагались все элементы, отличающиеся от максимального не более чем на 20 %, а потом — все остальные.
	zad_SORT(a, n);

	////////////////////////////////////////////////////////////////////////////////////
	cout << "Введите количество элементов массива(int): "; cin >> n;
	int* b = new int[n];
	cout << " Введите элементы массива: ";
	for (int i = 0; i < n; i++) cin >> b[i];
	Vivod(b, n);
	/////////////////////////////////////////////////////////////////////////////////////
	//Блок 1-го задания
	zad_POISK(b, n);
	//Блок 2-го задания
	zad_SUM(b, n);
	//Блок 3-го задания
	zad_SORT(b, n);

	delete[] a; delete[] b;
	return 0;
	system("pause");
}

template <class T> T zad_POISK(T* ptrA, const int n) {
	int c;
	cout << "\nВведите C :"; cin >> c;
	int k = 0; // счетчик эл-ов меньше с
	for (int i = 0; i < n; i++)
		if (ptrA[i] < c) k++;
	cout << "Кол-во элементов меньше С = " << k;
	return k;
}
template <class T> T zad_SUM(T* ptrA, const int n) {
	int ineg = -1;
	for (int i = 0; i < n; i++) if (ptrA[i] < 0) ineg = i;
	if (ineg == -1) cout << "\nОтрицательных элементов нет!\n";
	else if (ineg == n - 1) cout << "\nОтрицательный элемент - последний!\n";
	else {
		int sum = 0;
		for (int i = ineg + 1; i < n; i++) sum += (int)ptrA[i];
		cout << " \nСумма после последнего отриц. элемента: " << sum;
		return sum;
	}
}
template <class T> T zad_SORT(T* ptrA, const int n) {
	int imax = 0;
	for (int i = imax = 0; i < n; i++) {
		if (ptrA[i] > ptrA[imax]) imax = i;
	}
	double twenty = ptrA[imax] - ptrA[imax] * 0.2; // находим число, которое отличается от максимального ровно на 20%,
											//  послужит критерием для сортировки массива
	cout << "\n max= " << ptrA[imax] << "\n -20% от max:" << twenty << endl;
	for (int i = 0; i < n; i++)
		if (ptrA[i] >= twenty)
			cout << ptrA[i] << " ";
	for (int i = 0; i < n; i++)
		if (!(ptrA[i] >= twenty))
			cout << ptrA[i] << " ";
	cout << endl;
	return 0;
}
template <class T> T Vivod(T* ptrA, const int n) {
	cout << " а = ";
	for (int i = 0; i < n; i++) cout << ptrA[i] << " ";
	return 1;
}